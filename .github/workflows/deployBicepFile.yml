name: Deploy Bicep File

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [synchronize, reopened, opened]
    branches:
      - "master"
      - "production"
    paths-ignore:
      - "README.md"

env:
  AZURE_RESOURCEGROUP_NAME: demo-apim-graphql
  ENVIRONMENT: nonprod
  LOCATION: "eastus"

jobs:
  # JOB:1
  Launch_VM_and_checkout_code:
    runs-on: ubuntu-latest
    steps:
    - name: Launch VM and Checkout code
      uses: actions/checkout@main
  
  # JOB:2
  Login_Azure:
    # Login to Azure
    - name: Log into Azure
      needs: Launch_VM_and_checkout_code
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Checks that all Bicep configuration files adhere to a canonical format
    - name: Bicep Lint
      uses: Azure/cli@v1
      with:
        inlineScript: az bicep build --file ../.github/biceps/create_apim_service.bicep

  # JOB:3
  Deploy_Bicep_Scripts:
    - name: Deploy APIM service
      needs: Login_Azure
      runs-on: ${{ needs.Login_Azure.outputs.label }}
      uses: azure/arm-deploy@v1
      with:
        deploymentName: ${{ github.run_number }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./.github//biceps/create_apim_service.bicep
        parameters: 'apiManagementServiceName=caa-api-dev publisherName=Rajeev Kumar publisherEmail=xylem@yopmai.com sku=Developer skuCount=1'
        failOnStdErr: false

    - name: Expose GraphQL API through APIM services
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az deployment group create \
            --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} 
            --template-file ./.github/biceps/deploy_graphql_api.bicep
            --location ${{ env.LOCATION }}

    - name: Configure API Policies
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Configure API Policies - DONE"

    - name: Configure Product, User, Group and Subscription
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Configure Product, User, Group and Subscription - DONE"

    - name: Configure Product Policies
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Configure Product Policies - DONE"

    - name: Configure Developer Portal
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Configure Developer Portal - DONE"
  
  # JOB:4
  Cleanu_Up_Resources:
    - name: Clean up resources
      if: always()
      runs-on: ubuntu-latest
      needs: Deploy_Bicep_Scripts
      uses: Azure/cli@v1
      with:
        run: |
          echo "List APIM API(s)"
          az apim api list
          echo "Delete APIM resource by ID"
          run: 'az resource delete --ids /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZURE_RESOURCEGROUP_NAME }}/providers/Microsoft.ApiManagement/service/*'